#! /usr/bin/env python

import click
from omdatabase.lib.build import BuildIndex
from omdatabase.lib.download import DownloadDB
from omdatabase.database.db_collection import DatabaseInf
from omdatabase.database.db_path import DatabasePath


@click.command()
@click.option(
    '-s',
    '--species',
    type=click.STRING,
    required=True,
    help='Species latin name.'
)
@click.option(
    '-d',
    '--database',
    type=click.STRING,
    default='ensembl',
    help='Public database name.'
)
@click.option(
    '-v',
    '--version',
    type=click.STRING,
    default='current',
    help='Database version.'
)
@click.option(
    '-a',
    '--analysis',
    type=click.STRING,
    default='rnaseq',
    help='Analysis for which the database is build for.'
)
@click.option(
    '-r',
    '--run',
    type=click.Choice(['download', 'build', 'update']),
    default='download',
    help='Choose to download, build or update database.',
)
@click.option(
    '-l',
    '--launch',
    type=click.Choice(['local', 'slurm']),
    default='local',
    help='Choose to launch job local or on slurm.'
)
def main(species, database, version, analysis, run, launch):
    '''Command line tool for prepare database for NGS analysis
    '''
    # login ftp and get species database information
    click.secho('Get database information.')
    my_db_cons = DatabaseInf(database, species, version)
    my_db_inf = my_db_cons.download_inf
    # get database path
    click.secho('Get database local path.')
    my_dbpath = DatabasePath.from_dbobj(my_db_inf)

    # download database to local
    click.secho('Dowonload database to local path.')
    my_download = DownloadDB(my_db_inf, my_dbpath)
    my_download.download

    if run == 'build':
        # build index for database
        click.secho('Build index and other prepare work.')
        my_build = BuildIndex(my_db_inf, my_dbpath,
                              analysis=analysis, launch=launch)
        my_build.build


if __name__ == '__main__':
    main()

